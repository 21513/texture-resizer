from PIL import Image, ImageTk
import os
import tkinter as tk
from tkinter import filedialog

class ImageResizerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Auto Texture Resizer")

        self.input_folder = tk.StringVar()
        self.output_folder = tk.StringVar()
        self.target_sizes_var = tk.StringVar(value="8192 4096 2048 1024")
        self.image_listbox = tk.Listbox(self.root, selectmode=tk.SINGLE, width=40, height=10)

        self.create_widgets()

    def create_widgets(self):
        # Input folder
        tk.Label(self.root, text="Input Folder:").grid(row=0, column=0, padx=10, pady=5)
        tk.Entry(self.root, textvariable=self.input_folder, state="readonly", width=40).grid(row=0, column=1, padx=10, pady=5)
        tk.Button(self.root, text="Browse", command=self.browse_input_folder).grid(row=0, column=2, padx=5, pady=5)

        # Output folder
        tk.Label(self.root, text="Output Folder:").grid(row=1, column=0, padx=10, pady=5)
        tk.Entry(self.root, textvariable=self.output_folder, state="readonly", width=40).grid(row=1, column=1, padx=10, pady=5)
        tk.Button(self.root, text="Browse", command=self.browse_output_folder).grid(row=1, column=2, padx=5, pady=5)

        # Target sizes
        tk.Label(self.root, text="Target Sizes (space-separated):").grid(row=2, column=0, padx=10, pady=5)
        tk.Entry(self.root, textvariable=self.target_sizes_var, width=40).grid(row=2, column=1, padx=10, pady=5)

        # Image listbox
        tk.Label(self.root, text="Images in Input Folder:").grid(row=3, column=0, padx=10, pady=5)
        self.image_listbox.grid(row=3, column=1, padx=10, pady=5)

        # Resize button
        tk.Button(self.root, text="Resize Images", command=self.resize_images).grid(row=4, column=1, pady=10)

    def browse_input_folder(self):
        folder_path = filedialog.askdirectory()
        self.input_folder.set(folder_path)
        self.update_image_listbox()

    def browse_output_folder(self):
        folder_path = filedialog.askdirectory()
        self.output_folder.set(folder_path)

    def update_image_listbox(self):
        input_folder = self.input_folder.get()
        self.image_listbox.delete(0, tk.END)

        if input_folder:
            for filename in os.listdir(input_folder):
                self.image_listbox.insert(tk.END, filename)

    def resize_images(self):
        input_folder = self.input_folder.get()
        output_folder = self.output_folder.get()
        target_sizes_str = self.target_sizes_var.get()

        if input_folder and output_folder and target_sizes_str:
            target_sizes = [int(size) for size in target_sizes_str.split()]

            for filename in os.listdir(input_folder):
                input_path = os.path.join(input_folder, filename)

                # Split the file name and extension
                file_name, file_extension = os.path.splitext(filename)

                with Image.open(input_path) as img:
                    for size in target_sizes:
                        resized_img = img.resize((size, size))
                        
                        # Construct the output file name without the original ".jpg" extension
                        output_file = f"{output_folder}/{file_name}_{size}x{size}.jpg"
                        resized_img.save(output_file, "JPEG")

            tk.messagebox.showinfo("Success", "Images resized successfully!")

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageResizerApp(root)
    root.mainloop()
